@page "/laptop-crear"
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>Ingrese los datos de la Revista</h3>
<EditForm Model="@laptop" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Serie_Num">Serie de la Laptop</label>
        <InputText id="Serie_Num" @bind-Value="laptop.Serie_Num" class="form-control" />
        <ValidationMessage For="() => laptop.Serie_Num" />
    </div>
    <div class="form-group">
        <label for="Marca">Marca de la Laptop</label>
        <InputText id="Marca" @bind-Value="laptop.Marca" class="form-control" />
        <ValidationMessage For="() => laptop.Marca" />
    </div>
    <div class="form-group">
        <label for="Modelo">Modelo de la Laptop</label>
        <InputText id="Modelo" @bind-Value="laptop.Modelo" class="form-control" />
        <ValidationMessage For="() => laptop.Modelo" />
    </div>
    <div class="form-group">
        <label for=" Memoria_ram">Memoria Ram de la Laptop</label>
        <InputNumber id=" Memoria_ram" @bind-Value="laptop. Memoria_ram" class="form-control" />
        <ValidationMessage For="() => laptop. Memoria_ram" />
    </div>
    <div class="form-group">
        <label for=" Capacidad">Capacidad de Almacenamiento de la Laptop</label>
        <InputText id="Capacidad" @bind-Value="laptop.Capacidad" class="form-control" />
        <ValidationMessage For="() => laptop.Capacidad" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>
@if (laptops != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Serie</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Memoria Ram</th>
                <th>Almacenamiento</th>

                <th>Eliminar</th>
                <th>Editar</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var laptop in laptops)
            {
                <tr>
                    <td>@laptop.Serie_Num</td>
                    <td>@laptop.Marca</td>
                    <td>@laptop.Modelo</td>
                    <td>@laptop.Memoria_ram</td>
                    <td>@laptop.Capacidad</td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="@(() => Borrar(laptop.Capacidad))">
                            Eliminar
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-warning"
                                @onclick="@(() => NavigationManager.NavigateTo($"/laptop-editar/{laptop.Capacidad}"))">
                            Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private Laptop laptop= new Laptop();
    List<Laptop> laptops = new List<Laptop>();

    protected async Task Guardar()
    {
        laptops.Add(laptop);
        laptop = new Laptop();
        await localStorage.SetItemAsync("laptops", laptops);
    }

    protected override async Task OnInitializedAsync()
    {   //La primera vez que se corre poner en comentarios, pues como no existen datos
        //convierta la lista catedraticos en null
        laptops = await localStorage.GetItemAsync<List<Laptop>>("laptops");
    }
    protected async Task Borrar(string Capacidad)
    {
        laptops.Remove(laptops.First(c => c.Capacidad == Capacidad));
        await localStorage.SetItemAsync("laptops", laptops);

    }
   
}
